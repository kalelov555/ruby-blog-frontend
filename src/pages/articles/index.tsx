import type { NextPage } from "next";
import Head from "next/head";
import styles from "../../styles/Home.module.css";
import { Button, List, Space } from "antd";
import React, { useEffect, useState } from "react";
import axios from "axios";
import Link from "next/link";
import Navbar from "components/Navbar";

export type Article = {
  title: string;
  description: string;
  slug: string;
  visible: boolean;
  created_at: string;
  images: [string];
};

export type ArticleArray = {
  type: string;
  id: string;
  attributes: Article;
};

const Home: NextPage = () => {
  const [articles, setArticles] = useState<ArticleArray[]>([]);
  console.log(articles);

  const filterByDate = () => {
    articles.sort((a, b) => {
      return (
        new Date(a.attributes.created_at).getTime() -
        new Date(b.attributes.created_at).getTime()
      );
    });
  };

  useEffect(() => {
    axios
      .get(`http://localhost:3000/articles/`)
      .then((val) => setArticles(val.data.data));
  }, []);

  useEffect(() => {
    const intervalId = setInterval(() => {
      axios
        .get("http://localhost:3000/articles", {
          headers: { "Access-Control-Allow-Origin": "*" },
        })
        .then((val) => setArticles(val.data.data));
    }, 30000);

    return () => clearInterval(intervalId); //This is important
  }, [setArticles, articles]);

  const attributes = articles.filter((object) => {
    return object.attributes.visible !== false;
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Articles</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Navbar />
      <Button type='primary' style={{ margin: 15 }} onClick={filterByDate}>
        Filter by date
      </Button>
      <List
        itemLayout='vertical'
        size='large'
        pagination={{
          onChange: (page) => {
            console.log(page);
          },
          pageSize: 3,
        }}
        dataSource={attributes}
        renderItem={({ attributes }: { attributes: Article }) => (
          <List.Item
            key={attributes.title}
            extra={<img src={attributes.images[0]} width={250} alt='' />}
          >
            <List.Item.Meta
              title={
                <Link href={`/articles/${attributes.slug}`}>
                  {attributes.title}
                </Link>
              }
              description={attributes.created_at}
            />
            {attributes.description}
          </List.Item>
        )}
      />

      <footer className={styles.footer}>Sagynzhan Kalel</footer>
    </div>
  );
};

export default Home;
